#===============================================
# Description: Build OpenWrt
# Lisence: MIT
# Original Author: P3TERX
# DIY: Tao173 
#===============================================

name: ARMv8_Plus_Lienol_21.02

on:
  repository_dispatch:
    types: [Lienol Source Code Update] 
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH Connection To Actions?'
        required: false
        default: 'false'
      myself:
        description: '⚡ Just ⚡ For ⚠ Myself ⚠'
        required: false
        default: 'true'
  push:
    paths:
      - 'diy-part2Li.sh'
jobs:
  buildone:
    runs-on: ubuntu-20.04
    env:
      REPO_URL: https://github.com/Lienol/openwrt
      REPO_BRANCH: 21.02
      FEEDS_CONF: diy/arm/feeds.conf.default
      CONFIG_FILE: diy/arm/Li.config
      DIY_P1_SH: diy/arm/diy-part1.sh
      DIY_P2_SH: diy/arm/diy-part2Li.sh
      UPLOAD_BIN_DIR: false
      UPLOAD_FIRMWARE: true
      UPLOAD_RELEASE: true
      TZ: Asia/Shanghai
      FILE_NAME: ROOTFS_Plus
      PRODUCT_NAME: ARMv8_Plus

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        Author=$(git show -s --date=short --format="Author: %an")
        Date=$(git show -s --date=short --format="date: %cd")
        Commit=$(git show -s --date=short --format="commit: %s")
        Hash=$(git show -s --date=short --format="commit hash: %h")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "author=$Author" >> $GITHUB_ENV
        echo "date=$Date" >> $GITHUB_ENV
        echo "commit=$Commit" >> $GITHUB_ENV
        echo "hash=$Hash" >> $GITHUB_ENV
        echo "DATEA=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: Setup Debug Session 'touch /tmp/keepalivegit'
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') 
      uses: csexton/debugger-action@master

    - name: Upload files to release
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false')     
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt for ${{ env.FILE_NAME }}
        artifacts: ./openwrt/.config
        allowUpdates: true
        replacesArtifacts: true        
        tag: ${{ env.FILE_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          * 这是临时文件夹 🛒

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cp openwrt/.config build.config
        mkdir -p Packages
        cp -rf openwrt/bin/packages/*/*/*.ipk Packages
        tar -zcvf Packages.tar.gz Packages
        mv *.config *.tar.gz openwrt/bin/targets/*/*
        cp -rf openwrt/bin/targets lean
        rm -rf openwrt/* && cd lean/*/*
        rm -rf packages feeds.buildinfo sha256sums version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Rename Rootfs for upload
      run: |
        sudo apt install rename
        cd ${{ env.FIRMWARE }}
        rename "s/Packages/Lienol.Packages/" ./Packages.tar.gz        
        rename "s/build/Lienol.build/" ./build.config
        rename "s/config/Lienol.config/" ./config.buildinfo
        rename "s/openwrt/Lienol/" ./*

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: OpenWrt for ${{ env.FILE_NAME }}
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        replacesArtifacts: true        
        tag: ${{ env.FILE_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ** 打包时间:🕛 ${{ env.DATE }}      🤵 源码作者:[Lienol](https://github.com/Lienol)
          * 这是 ARMv8_Lienol plus打包临时固件，不可直刷
          直刷固件参见 Tag 名为 ${{ env.PRODUCT_NAME }} 的 Releases
          当前使用版本:【编译前的最后一次[➦主源码](https://github.com/Lienol/openwrt)更新记录】
          ${{ env.useVersionInfo }}

    - name: Rename Rootfs for build
      run: |
        sudo apt install rename
        cd ${{ env.FIRMWARE }}
        rename "s/Lienol.Packages/Packages/" ./Lienol.Packages.tar.gz
        rename "s/Lienol.build/build/" ./Lienol.build.config
        rename "s/Lienol.config/config/" ./Lienol.config.buildinfo
        rename "s/Lienol/openwrt/" ./*

    - name: Package armvirt as openwrt
      uses: Tao173/Auto-Update-Router@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        OPENWRT_ARMVIRT: lean/*/*/*rootfs.tar.gz
        PACKAGE_SOC: vplus_beikeyun_l1pro_s905d_s905x2_s905x3_s912_s922x_s922x-n2
        KERNEL_REPO_URL: https://github.com/ophub/kernel/tree/main/pub/stable
        KERNEL_VERSION_NAME: 5.4.163_5.10.83_5.15.13_5.17.13
        KERNEL_AUTO_LATEST: true
        WHOAMI: Tao
        OPENWRT_VER: ${{env.REPO_BRANCH}}
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        GZIP_IMGS: .gz

    - name: Rename Firmware and Rootfs for upload
      run: |
        sudo apt install rename
        cd ${{ env.PACKAGED_OUTPUTPATH }}
        rename "s/openwrt/Lienol/" ./*.gz

    - name: Upload openwrt to release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt for ${{ env.PRODUCT_NAME }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ** 打包时间:🕛 ${{ env.DATE }}      🤵 源码作者:[Lienol](https://github.com/Lienol)      内核:[ophub](https://github.com/ophub/kernel)
          * 这是 ARMv8 PLUS版本 ，集成一些日常常用插件
          默认 IP：192.168.124.38 默认密码：无/password
          安装到 EMMC：系统 → 晶晨宝盒 → 安装 OpenWrt → 选择型号 → 安装
          升级 OpenWrt：系统 → 晶晨宝盒 → 手动上传更新 或者 在线下载更新
          当前使用版本:【编译前的最后一次➦[主源码](https://github.com/Lienol/openwrt/)更新记录】
          ${{ env.useVersionInfo }}
           
    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ env.PRODUCT_NAME }}打包完成
          编译时间：${{ env.DATE }}
          更新信息：
          作者: ${{ env.author }}
          时间: ${{ env.date }}
          内容: ${{ env.commit }}
          hash: ${{ env.hash }}

# /////////////////////////////////////////////////////////////////////////////////////////////////////////
  buildtwo:
    if: (github.event.inputs.myself == 'true' && github.event.inputs.myself  != 'false') 
    runs-on: ubuntu-20.04
    env:
      REPO_URL: https://github.com/Lienol/openwrt
      REPO_BRANCH: 21.02
      FEEDS_CONF: diy/arm/feeds.conf.default
      CONFIG_FILE: diy/arm/Li.config
      DIY_P1_SH: diy/arm/diy-part1.sh
      DIY_P2_SH: diy/arm/diy-part2Li.sh
      UPLOAD_BIN_DIR: false
      UPLOAD_FIRMWARE: true
      UPLOAD_RELEASE: true
      UPLOAD_189: false
      TZ: Asia/Shanghai
      FILE_NAME: ROOTFS_Plus_Myself
      PRODUCT_NAME: ARMv8_Plus_Myself
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        Author=$(git show -s --date=short --format="Author: %an")
        Date=$(git show -s --date=short --format="date: %cd")
        Commit=$(git show -s --date=short --format="commit: %s")
        Hash=$(git show -s --date=short --format="commit hash: %h")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "author=$Author" >> $GITHUB_ENV
        echo "date=$Date" >> $GITHUB_ENV
        echo "commit=$Commit" >> $GITHUB_ENV
        echo "hash=$Hash" >> $GITHUB_ENV
        echo "DATEA=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cp -RT  diy/files openwrt/files
        unzip  -P ${{ secrets.ZIPPASS }} -d openwrt/files/etc openwrt/files/etc/config.zip
        rm -rf openwrt/files/etc/config.zip
        chmod +x $DIY_P2_SH
        cd openwrt       
        $GITHUB_WORKSPACE/$DIY_P2_SH
        sed -i '/CYXluq4wUazHjmCDBCqXF/d' package/default-settings/files/zzz-default-settings
        sed -i '/exit 0/d' package/default-settings/files/zzz-default-settings
        cat files/mydefault >> package/default-settings/files/zzz-default-settings         

    - name: Upload files to release
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false')     
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt for ${{ env.FILE_NAME }}
        artifacts: ./openwrt/.config
        allowUpdates: true
        replacesArtifacts: true        
        tag: ${{ env.FILE_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          * 这是临时文件夹 🛒

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cp openwrt/.config build.config
        mkdir -p Packages
        cp -rf openwrt/bin/packages/*/*/*.ipk Packages
        tar -zcvf Packages.tar.gz Packages
        mv *.config *.tar.gz openwrt/bin/targets/*/*
        cp -rf openwrt/bin/targets lean
        rm -rf openwrt/* && cd lean/*/*
        rm -rf packages feeds.buildinfo sha256sums version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Rename Rootfs for upload
      run: |
        sudo apt install rename
        cd ${{ env.FIRMWARE }}
        rename "s/Packages/Lienol.Packages/" ./Packages.tar.gz        
        rename "s/build/Lienol.build/" ./build.config
        rename "s/config/Lienol.config/" ./config.buildinfo
        rename "s/openwrt/Lienol/" ./*

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: OpenWrt for Myself ${{ env.FILE_NAME }}
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        replacesArtifacts: true        
        tag: ${{ env.FILE_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ** 打包时间:🕛 ${{ env.DATE }}      🤵 源码作者:[Lienol](https://github.com/Lienol)
          * 自用底包
          * ❌❌❌禁止❌❌❌使用❌❌❌
          * ❗包含大量个性化配置，使用自编译内核，可能极不稳定，无法直接使用❗

    - name: Rename Rootfs for build
      run: |
        sudo apt install rename
        cd ${{ env.FIRMWARE }}
        rename "s/Lienol.Packages/Packages/" ./Lienol.Packages.tar.gz
        rename "s/Lienol.build/build/" ./Lienol.build.config
        rename "s/Lienol.config/config/" ./Lienol.config.buildinfo
        rename "s/Lienol/openwrt/" ./*

    - name: Package armvirt as openwrt
      uses: Tao173/Auto-Update-Router@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        OPENWRT_ARMVIRT: lean/*/*/*rootfs.tar.gz
        PACKAGE_SOC: vplus_beikeyun_l1pro_s905d_s905x2_s905x3_s912_s922x_s922x-n2
        KERNEL_REPO_URL: https://github.com/Tao173/Auto-Update-Router/tree/master/backup/mykernel
        KERNEL_VERSION_NAME: 5.4.163_5.10.83_5.15.13_5.17.13
        KERNEL_AUTO_LATEST: true
        WHOAMI: Tao
        OPENWRT_VER: ${{env.REPO_BRANCH}}
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        GZIP_IMGS: .gz

    - name: Rename Firmware and Rootfs for upload
      run: |
        sudo apt install rename
        cd ${{ env.PACKAGED_OUTPUTPATH }}
        rename "s/openwrt/Lienol/" ./*.gz

    - name: Upload openwrt to release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt ${{ env.PRODUCT_NAME }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ** 打包时间:🕛 ${{ env.DATE }}      🤵 源码作者:[Lienol](https://github.com/Lienol)      内核:[Myself](https://github.com/Tao173/compile-kernel)
          * ❌❌❌禁止❌❌❌使用❌❌❌
          * ❗包含大量个性化配置，使用自编译内核，可能极不稳定，无法直接使用❗
                   
    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ env.PRODUCT_NAME }}自用固件打包完成
          编译时间：${{ env.DATE }}
          更新信息：
          作者: ${{ env.author }}
          时间: ${{ env.date }}
          内容: ${{ env.commit }}
          hash: ${{ env.hash }}