#===============================================
# Description: Package And Backup
# Lisence: MIT
# Original Author: Tao173 
#===============================================

name: Package And Backup

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH Connection To Actions?'
        required: false
        default: 'false'
      upload:
        description: 'Which one want to upload? lean/immortalwrt/lienol/root/all'
        required: false
        default: 'all'
    
env:
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Package-for-Li:
    runs-on: ubuntu-20.04
    env:
      REPO_URL: https://github.com/Lienol/openwrt
      REPO_BRANCH: 21.02    
      VERSION: Lienol
      EXPLAIN: 这是Plus_Lienol版
      FILE_NAME: ROOTFS_Plus_Myself
      PRODUCT_NAME: ARMv8_Plus_Myself
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Download Basepackages
      run: |
        wget --no-check-certificate https://github.com/Tao173/Auto-Update-Router/releases/download/${{ env.FILE_NAME }}/${{ env.VERSION }}-armvirt-64-default-rootfs.tar.gz
        sudo apt install rename
        rename "s/${{ env.VERSION }}/openwrt/" ${{ env.VERSION }}-armvirt-64-default-rootfs.tar.gz
        
    - name: Package armvirt as openwrt
      uses: Tao173/Auto-Update-Router@master
      env:
        OPENWRT_ARMVIRT: openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: s912
        KERNEL_REPO_URL: https://github.com/Tao173/Auto-Update-Router/tree/master/backup/mykernel
        KERNEL_VERSION_NAME: 5.10.83_5.15.13
        KERNEL_AUTO_LATEST: true
        WHOAMI: Tao
        OPENWRT_VER: ${{env.REPO_BRANCH}}
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0        
        GZIP_IMGS: .gz 

    - name: Setup Debug Session
      uses: csexton/debugger-action@master

    - name: Rename Firmware and Rootfs for upload
      run: |
        sudo apt install rename
        cd ${{ env.PACKAGED_OUTPUTPATH }}
        rename "s/openwrt/Lienol/" ./*.gz

    - name: Upload artifact to actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}

    - name: Upload openwrt to release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt ${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **This is OpenWrt firmware for Armvirt 64**
          * ${{ env.EXPLAIN }}
          默认 IP：10.10.10.10 默认密码：无
          安装到 EMMC：系统 → 晶晨宝盒 → 安装 OpenWrt → 选择型号 → 安装
          升级 OpenWrt：系统 → 晶晨宝盒 → 手动上传更新 或者 在线下载更新
          当前使用版本:【编译前的最后一次➦[主源码](https://github.com/coolsnowwolf/lede)更新记录】
          ${{ env.useVersionInfo }}

# /////////////////////////////////////////////////////////////////////////////////////////////////////////
  Package-for-Le:
    runs-on: ubuntu-20.04
    env:
      REPO_URL: https://github.com/coolsnowwolf/lede
      REPO_BRANCH: master    
      VERSION: Lean
      EXPLAIN: 这是Plus_Lean版
      FILE_NAME: ROOTFS_Plus_Myself
      PRODUCT_NAME: ARMv8_Plus_Myself
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Download Basepackages
      run: |
        wget --no-check-certificate https://github.com/Tao173/Auto-Update-Router/releases/download/${{ env.FILE_NAME }}/${{ env.VERSION }}-armvirt-64-default-rootfs.tar.gz
        sudo apt install rename
        rename "s/${{ env.VERSION }}/openwrt/" ${{ env.VERSION }}-armvirt-64-default-rootfs.tar.gz

    - name: Package armvirt as openwrt
      uses: Tao173/Auto-Update-Router@master
      env:
        OPENWRT_ARMVIRT: openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: s912
        KERNEL_REPO_URL: https://github.com/Tao173/Auto-Update-Router/tree/master/backup/mykernel
        KERNEL_VERSION_NAME: 5.10.83_5.15.13
        KERNEL_AUTO_LATEST: true
        WHOAMI: Tao
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0        
        GZIP_IMGS: .gz

    - name: Rename Firmware and Rootfs for upload
      run: |
        sudo apt install rename
        cd ${{ env.PACKAGED_OUTPUTPATH }}
        rename "s/openwrt/Lean/" ./*.gz

    - name: Upload artifact to actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}

    - name: Upload openwrt to release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt ${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **This is OpenWrt firmware for Armvirt 64**
          * ${{ env.EXPLAIN }}
          默认 IP：10.10.10.10 默认密码：无
          安装到 EMMC：系统 → 晶晨宝盒 → 安装 OpenWrt → 选择型号 → 安装
          升级 OpenWrt：系统 → 晶晨宝盒 → 手动上传更新 或者 在线下载更新
          当前使用版本:【编译前的最后一次➦[主源码](https://github.com/coolsnowwolf/lede)更新记录】
          ${{ env.useVersionInfo }}

# /////////////////////////////////////////////////////////////////////////////////////////////////////////          
  Package-for-Im:
    runs-on: ubuntu-20.04
    env:
      REPO_URL: https://github.com/immortalwrt/immortalwrt
      REPO_BRANCH: openwrt-21.02    
      VERSION: PLUS
      EXPLAIN: 这是Plus_immortalwrt版
      FILE_NAME: ROOTFS_Plus_Myself
      PRODUCT_NAME: ARMv8_Plus_Myself
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Download Basepackages
      run: |
        wget --no-check-certificate https://github.com/Tao173/Auto-Update-Router/releases/download/${{ env.FILE_NAME }}/${{ env.VERSION }}-armvirt-64-default-rootfs.tar.gz
        sudo apt install rename
        rename "s/${{ env.VERSION }}/openwrt/" ${{ env.VERSION }}-armvirt-64-default-rootfs.tar.gz

    - name: Package armvirt as openwrt
      uses: Tao173/Auto-Update-Router@master
      env:
        OPENWRT_ARMVIRT: openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: s912
        KERNEL_REPO_URL: https://github.com/Tao173/Auto-Update-Router/tree/master/backup/mykernel
        KERNEL_VERSION_NAME: 5.4.163_5.10.83_5.15.13_5.17.13
        KERNEL_AUTO_LATEST: true
        WHOAMI: Tao
        OPENWRT_VER: ${{env.REPO_BRANCH}}
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0        
        GZIP_IMGS: .gz

    - name: Rename Firmware and Rootfs for upload
      run: |
        sudo apt install rename
        cd  ${{ env.PACKAGED_OUTPUTPATH }}
        rename "s/openwrt/immortalwrt/" ./*.gz

    - name: Upload artifact to actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}

    - name: Upload openwrt to release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && !cancelled()
      with:
        name: OpenWrt ${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **This is OpenWrt firmware for Armvirt 64**
          * ${{ env.EXPLAIN }}
# /////////////////////////////////////////////////////////////////////////////////////////////////////////
  Backuptocloud189:
    if: ${{ always() }}
    needs: [Package-for-Li, Package-for-Le, Package-for-Im]  
    runs-on: ubuntu-20.04
    env:
      REPO_URL: https://github.com/coolsnowwolf/lede
      REPO_BRANCH: master   
      VERSION: Lienol
      EXPLAIN: 这是Plus_Lienol版
      PRODUCT_NAME: ARMv8_Plus
    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        Author=$(git show -s --date=short --format="Author: %an")
        Date=$(git show -s --date=short --format="date: %cd")
        Commit=$(git show -s --date=short --format="commit: %s")
        Hash=$(git show -s --date=short --format="commit hash: %h")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "author=$Author" >> $GITHUB_ENV
        echo "date=$Date" >> $GITHUB_ENV
        echo "commit=$Commit" >> $GITHUB_ENV
        echo "hash=$Hash" >> $GITHUB_ENV
        echo "DATEA=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "nametag=${{ github.event.inputs.upload }}" >> $GITHUB_ENV
  
    - name: Release Downloader ARMv8_Plus_Myself
      if: (github.event.inputs.upload != 'root') 
      uses: robinraju/release-downloader@v1.3
      with:
        repository: "Tao173/Auto-Update-Router"
        out-file-path: "./Download"
        tag: "ARMv8_Plus_Myself"
        fileName: "*"

    - name: Release Downloader ROOTFS_Plus_Myself
      if: (github.event.inputs.upload == 'root') 
      uses: robinraju/release-downloader@v1.3
      with:
        repository: "Tao173/Auto-Update-Router"
        out-file-path: "./Download"
        tag: "ROOTFS_Plus_Myself"
        fileName: "*"

    - name: Select a version Lean
      if: (github.event.inputs.upload == 'lean' && github.event.inputs.upload != 'all') 
      run: |   
        cd ./Download
        ls -l |grep -v Lean | awk '{print $9}'  | xargs rm -fr

    - name: Select a version Immortalwrt
      if: (github.event.inputs.upload == 'immortalwrt' && github.event.inputs.upload != 'all') 
      run: |   
        cd ./Download
        ls -l |grep -v immortalwrt | awk '{print $9}'  | xargs rm -fr

    - name: Select a version Lienol
      if: (github.event.inputs.upload == 'lienol' && github.event.inputs.upload != 'all') 
      run: |   
        cd ./Download
        ls -l |grep -v Lienol | awk '{print $9}'  | xargs rm -fr     

    - name: Zip Firmware & Rootfs For Upload
      id: zip
      run: |
        tar -cjvf OpenWrt-imgs-$(date +%Y-%m-%d)-${{ env.nametag }}.tar.bz2 ./Download

    - name: backup to cloud189-go
      id: cloud189go
      timeout-minutes: 160
      run: |
        wget --no-check-certificate https://github.com/tickstep/cloudpan189-go/releases/download/$( curl -s  https://api.github.com/repos/tickstep/cloudpan189-go/releases/latest | jq -r .name | cut -d " " -f 1 )/cloudpan189-go-$( curl -s  https://api.github.com/repos/tickstep/cloudpan189-go/releases/latest | jq -r .name | cut -d " " -f 1 )-linux-amd64.zip -O cloudgo.zip
        unzip -j cloudgo.zip
        rm -rf README.md && rm -rf LICENSE
        ./cloudpan189-go login -username=${{ secrets.NAME }} -password=${{ secrets.PASS }}
        ./cloudpan189-go u OpenWrt-imgs-$(date +%Y-%m-%d)-${{ env.nametag }}.tar.bz2 /我的备份/OpenWrt
        ./cloudpan189-go logout -y
        echo "::set-output name=status::success"

    - name: backup to cloud189
      if: steps.cloud189go.outputs.status != 'success' && !cancelled()
      id: cloud189
      timeout-minutes: 160
      run: |
        wget --no-check-certificate https://github.com/gowsp/cloud189/releases/download/$( curl -s  https://api.github.com/repos/gowsp/cloud189/releases/latest | jq -r .name | cut -d " " -f 1 )/cloud189_$( curl -s  https://api.github.com/repos/gowsp/cloud189/releases/latest | jq -r .name | wget -qO- -t1 -T2 "https://api.github.com/repos/gowsp/cloud189/releases/latest" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//g;s/v//g;s/ //g' )_linux_amd64.tar.gz -O cloud.tar.gz
        tar -zxvf cloud.tar.gz
        rm -rf README.md && rm -rf LICENSE
        ./cloud189 login -i ${{ secrets.NAME }} ${{ secrets.PASS }}
        ./cloud189 up OpenWrt-imgs-$(date +%Y-%m-%d)-${{ env.nametag }}.tar.bz2 /我的备份/OpenWrt
        ./cloud189 logout -f
        echo "::set-output name=status::success"

    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          OpenWrt-imgs-$(date +%Y-%m-%d)-${{ env.nametag }}.tar.bz2自用固件上传天翼云盘完成
          编译时间：${{ env.DATE }}
          更新信息：
          作者: ${{ env.author }}
          时间: ${{ env.date }}
          内容: ${{ env.commit }}
          hash: ${{ env.hash }}
          以上信息来自Lean源码提交记录

